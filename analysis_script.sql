-- CHECKING DATASET

-- Checking the structure and contents of the dataset
SELECT * FROM [dbo].[Adidas US Sales Datasets_]

-- Checking unique values in key columns for potential insights
SELECT DISTINCT Retailer_ID FROM [dbo].[Adidas US Sales Datasets_] -- Can be useful for plotting
SELECT DISTINCT Region FROM [dbo].[Adidas US Sales Datasets_]
SELECT DISTINCT State FROM [dbo].[Adidas US Sales Datasets_] -- Can be useful for plotting
SELECT DISTINCT City FROM [dbo].[Adidas US Sales Datasets_] -- Can be useful for plotting
SELECT DISTINCT Product FROM [dbo].[Adidas US Sales Datasets_] -- Can be useful for plotting
SELECT DISTINCT Sales_Method FROM [dbo].[Adidas US Sales Datasets_] -- Can be useful for plotting

-- ANALYSIS

-- Overall Sales by State
SELECT State, SUM(Units_Sold) AS Units_Sold_by_state, SUM(Total_Sales) AS Sales_by_state
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY State;

-- Overall sales by Retailer
SELECT Retailer, SUM(Units_Sold) AS Units_Sold_by_retailer, SUM(Total_Sales) AS Sales_by_retailer
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY Retailer;

-- Overall sales by  Product
SELECT product, SUM(Units_Sold) AS Units_Sold_by_product, SUM(Total_Sales) AS Sales_by_product 
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY product;

-- Overall sales by Region
SELECT Region, SUM(Units_Sold) AS Units_Sold_by_product, SUM(Total_Sales) AS Sales_by_region 
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY Region;

-- Anlysing of Operating Profit

-- Total profit generated by each product
SELECT product, SUM(operating_profit) AS operating_profit_generated_per_product,
ROUND(SUM(operating_profit)/SUM(units_sold),2) AS OP_per_unit_sold
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY Product
ORDER BY OP_per_unit_sold DESC;

-- Overall total sales and profit generated by each retailer
SELECT retailer, SUM(total_Sales) AS total_sales, 
ROUND(SUM(operating_profit)/SUM(units_sold),2) AS OP_per_unit_sold
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY retailer
ORDER BY total_sales DESC;

-- Overall total sales and profit generated by sales method
SELECT sales_method, SUM(total_Sales) AS total_sales, 
ROUND(SUM(operating_profit)/SUM(units_sold),2) AS OP_per_unit_sold
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY sales_method
ORDER BY total_sales DESC;

-- Overall Units Sold 

-- By State 
SELECT state, SUM(units_sold) AS units_sold_per_state
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY state
ORDER BY units_sold_per_state DESC;

-- By Region
SELECT region, SUM(units_sold) AS units_sold_per_region
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY region
ORDER BY units_sold_per_region DESC;

-- Top 10 Cities by Sales Volume
SELECT TOP 10 city, SUM(units_sold) AS units_sold_per_city
FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY city
ORDER BY units_sold_per_city DESC;

-- Overall Specific Items Analysis

-- Overall Sales by Product
SELECT product, SUM(Units_Sold) AS Total_units_sold,
SUM(Total_Sales) AS Total_Revenue FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY product
ORDER BY Total_revenue DESC;

-- Sales of Specific Items in Each City
SELECT city, product, SUM(units_sold) AS number_of_products_by_city FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY city, product
ORDER BY city, product, number_of_products_by_city DESC;

-- Sales of Specific Items in Each State
SELECT state, product, SUM(units_sold) AS number_of_products_by_state FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY state, product
ORDER BY state, product, number_of_products_by_state DESC;

-- Sales of Specific Items in Each Region
SELECT region, product, SUM(units_sold) AS number_of_products_by_region FROM [dbo].[Adidas US Sales Datasets_]
GROUP BY region, product
ORDER BY region, product, number_of_products_by_region DESC;

-- Which Items Sold the Most in the Top 10 Cities
WITH TopCities AS (
    SELECT TOP 10 
           City, 
           SUM(units_sold) AS total_units_sold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY City
    ORDER BY SUM(units_sold) DESC
),
RankedProducts AS (
    SELECT tc.City,
           s.product,
           SUM(s.units_sold) AS total_units_sold,
           ROW_NUMBER() OVER (PARTITION BY tc.City ORDER BY SUM(s.units_sold) DESC) AS rank
    FROM [dbo].[Adidas US Sales Datasets_] s
    INNER JOIN TopCities tc ON s.City = tc.City
    GROUP BY tc.City, s.product
)
SELECT City,
       product,
       total_units_sold
FROM RankedProducts
WHERE rank = 1
ORDER BY City;

-- Listing Each Item in the Top 10 Cities in Descending Order
WITH TopCities AS (
    SELECT TOP 10 
           City, 
           SUM(units_sold) AS total_units_sold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY City
    ORDER BY SUM(units_sold) DESC
)
SELECT tc.City,
       s.product,
       SUM(s.units_sold) AS total_units_sold
FROM [dbo].[Adidas US Sales Datasets_] s
INNER JOIN TopCities tc ON s.City = tc.City
GROUP BY tc.City, s.product
ORDER BY tc.City, SUM(s.units_sold) DESC;

-- Which Items Sold the Most in the Top 10 States
WITH TopStates AS (
    SELECT TOP 10 
           State, 
           SUM(units_sold) AS total_units_sold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY State
    ORDER BY SUM(units_sold) DESC
),
RankedProducts AS (
    SELECT ts.State,
           s.product,
           SUM(s.units_sold) AS total_units_sold,
           ROW_NUMBER() OVER (PARTITION BY ts.State ORDER BY SUM(s.units_sold) DESC) AS rank
    FROM [dbo].[Adidas US Sales Datasets_] s
    INNER JOIN TopStates ts ON s.State = ts.State
    GROUP BY ts.State, s.product
)
SELECT State,
       product,
       total_units_sold
FROM RankedProducts
WHERE rank = 1
ORDER BY State;

-- Listing Each Item in the Top 10 States in Descending Order
WITH TopStates AS (
    SELECT TOP 10 
           State, 
           SUM(units_sold) AS total_units_sold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY State
    ORDER BY SUM(units_sold) DESC
)
SELECT ts.State,
       s.product,
       SUM(s.units_sold) AS total_units_sold
FROM [dbo].[Adidas US Sales Datasets_] s
INNER JOIN TopStates ts ON s.State = ts.State
GROUP BY ts.State, s.product
ORDER BY ts.State, SUM(s.units_sold) DESC;

-- Which Items Sold the Most in Each Region
WITH TopRegions AS (
    SELECT TOP 10 
           Region, 
           SUM(units_sold) AS total_units_sold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY Region
    ORDER BY SUM(units_sold) DESC
),
RankedProducts AS (
    SELECT tr.Region,
           s.product,
           SUM(s.units_sold) AS total_units_sold,
           ROW_NUMBER() OVER (PARTITION BY tr.Region ORDER BY SUM(s.units_sold) DESC) AS rank
    FROM [dbo].[Adidas US Sales Datasets_] s
    INNER JOIN TopRegions tr ON s.Region = tr.Region
    GROUP BY tr.Region, s.product
)
SELECT Region,
       product,
       total_units_sold
FROM RankedProducts
WHERE rank = 1
ORDER BY Region;

-- Listing Each Item in Each Region in Descending Order
WITH TopRegions AS (
    SELECT TOP 10 
           Region, 
           SUM(units_sold) AS total_units_sold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY Region
    ORDER BY SUM(units_sold) DESC
)
SELECT tr.Region,
       s.product,
       SUM(s.units_sold) AS total_units_sold
FROM [dbo].[Adidas US Sales Datasets_] s
INNER JOIN TopRegions tr ON s.Region = tr.Region
GROUP BY tr.Region, s.product
ORDER BY tr.Region, SUM(s.units_sold) DESC;

-- Identifying Top Selling Locations for Each Product
WITH RankedCities AS (
    SELECT product, 
           City,
           State,
           Region,
           SUM(units_sold) AS total_units_sold,
           ROW_NUMBER() OVER (PARTITION BY product ORDER BY SUM(units_sold) DESC) AS city_rank
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY product, City, State, Region
)
SELECT rc.product, 
       rc.City,
       rc.State,
       rc.Region,
       rc.total_units_sold
FROM RankedCities rc
WHERE rc.city_rank <= 5
ORDER BY rc.product, rc.total_units_sold DESC;

-- Yearly Sales Analysis Using Common Table Expression (CTE approach)
WITH YearlySales AS (
    SELECT YEAR(Invoice_Date) AS Year,
           product,
           SUM(units_sold) AS TotalUnitsSold,
           ROW_NUMBER() OVER (PARTITION BY YEAR(Invoice_Date) ORDER BY SUM(units_sold) DESC) AS ProductRank
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY YEAR(Invoice_Date), product
)
SELECT Year,
       product,
       TotalUnitsSold,
       ProductRank
FROM YearlySales
ORDER BY Year, TotalUnitsSold DESC, product;

-- Yearly Sales Analysis Using Subquery and dense_rank()
WITH YearlySales AS (
    SELECT YEAR(Invoice_Date) AS Year,
           product,
           SUM(units_sold) AS TotalUnitsSold,
           ROW_NUMBER() OVER (PARTITION BY YEAR(Invoice_Date) ORDER BY SUM(units_sold) DESC) AS ProductRank
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY YEAR(Invoice_Date), product
)
SELECT Year,
       product,
       TotalUnitsSold,
       ProductRank,
       ROUND(CAST((TotalUnitsSold - LAG(TotalUnitsSold) OVER (PARTITION BY product ORDER BY Year)) * 100.0 / NULLIF(LAG(TotalUnitsSold) OVER (PARTITION BY product ORDER BY Year), 0) AS DECIMAL(18,2)), 2) AS SalesPercentageIncrease
FROM YearlySales
ORDER BY Year, TotalUnitsSold DESC, product;

-- Monthly Sales Analysis
WITH MonthlySales AS (
    SELECT YEAR(Invoice_Date) AS Year,
           MONTH(Invoice_Date) AS Month,
           SUM(units_sold) AS TotalUnitsSold,
           ROW_NUMBER() OVER (PARTITION BY YEAR(Invoice_Date) ORDER BY SUM(units_sold) DESC) AS MonthRank
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY YEAR(Invoice_Date), MONTH(Invoice_Date)
)
SELECT Year,
       Month,
       TotalUnitsSold,
       MonthRank
FROM MonthlySales
ORDER BY Year, TotalUnitsSold DESC, Month;

-- August Sales Breakdown for Each Product
WITH MonthlySales AS (
    SELECT 
        YEAR(Invoice_Date) AS Year,
        MONTH(Invoice_Date) AS Month,
        product,
        SUM(units_sold) AS TotalUnitsSold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY YEAR(Invoice_Date), MONTH(Invoice_Date), product
)
SELECT 
    Year,
    product,
    SUM(CASE WHEN Month = 8 THEN TotalUnitsSold ELSE 0 END) AS UnitsSold_August
FROM MonthlySales
GROUP BY Year, product
ORDER BY Year, UnitsSold_August DESC, product;

-- Best Retailer in August (Best Month From the Last Query)
WITH MonthlySales AS (
    SELECT 
        YEAR(Invoice_Date) AS Year,
        MONTH(Invoice_Date) AS Month,
        Retailer,
        SUM(units_sold) AS TotalUnitsSold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY YEAR(Invoice_Date), MONTH(Invoice_Date), Retailer
),
AugustRetailerSales AS (
    SELECT 
        Year,
        Retailer,
        SUM(CASE WHEN Month = 8 THEN TotalUnitsSold ELSE 0 END) AS UnitsSold_August
    FROM MonthlySales
    GROUP BY Year, Retailer
)
SELECT 
    Year,
    Retailer,
    UnitsSold_August,
    ROW_NUMBER() OVER (PARTITION BY Year ORDER BY UnitsSold_August DESC) AS RetailerRank
FROM AugustRetailerSales
ORDER BY Year, RetailerRank;

-- Best Sales Method in August
WITH MonthlySales AS (
    SELECT 
        YEAR(Invoice_Date) AS Year,
        MONTH(Invoice_Date) AS Month,
        Sales_Method,
        SUM(units_sold) AS TotalUnitsSold
    FROM [dbo].[Adidas US Sales Datasets_]
    GROUP BY YEAR(Invoice_Date), MONTH(Invoice_Date), Sales_Method
),
AugustSalesMethodSales AS (
    SELECT 
        Year,
        Sales_Method,
        SUM(CASE WHEN Month = 8 THEN TotalUnitsSold ELSE 0 END) AS UnitsSold_August
    FROM MonthlySales
    GROUP BY Year, Sales_Method
)
SELECT 
    Year,
    Sales_Method,
    UnitsSold_August,
    ROW_NUMBER() OVER (PARTITION BY Year ORDER BY UnitsSold_August DESC) AS SalesMethodRank
FROM AugustSalesMethodSales
ORDER BY Year, SalesMethodRank;
